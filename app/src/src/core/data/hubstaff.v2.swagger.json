{
    "swagger": "2.0",
    "produces": [
        "application/json"
    ],
    "host": "api.hubstaff.com",
    "tags": [
        {
            "name": "users",
            "description": "User endpoints"
        },
        {
            "name": "organizations",
            "description": "Organization endpoints"
        },
        {
            "name": "invites",
            "description": "Organization invites endpoints"
        },
        {
            "name": "projects",
            "description": "Project endpoints"
        },
        {
            "name": "integrations",
            "description": "Integration endpoints"
        },
        {
            "name": "tasks",
            "description": "Task endpoints"
        },
        {
            "name": "activities",
            "description": "Activity endpoints"
        },
        {
            "name": "application_activities",
            "description": "App Activity endpoints"
        },
        {
            "name": "notes",
            "description": "Note endpoints"
        },
        {
            "name": "screenshots",
            "description": "Screenshot endpoints"
        },
        {
            "name": "time_edit_logs",
            "description": "Time edit log endpoints"
        },
        {
            "name": "url_activities",
            "description": "URL activity endpoints"
        },
        {
            "name": "team_payments",
            "description": "Team payment endpoints"
        },
        {
            "name": "clients",
            "description": "Clients endpoints"
        },
        {
            "name": "locations",
            "description": "Locations endpoints"
        },
        {
            "name": "client_invoices",
            "description": "Client invoices endpoints"
        },
        {
            "name": "team_invoices",
            "description": "Team invoices endpoints"
        },
        {
            "name": "time_off_policies",
            "description": "Time off policies endpoints"
        },
        {
            "name": "time_off_requests",
            "description": "Time off requests endpoints"
        },
        {
            "name": "attendance_schedules",
            "description": "Attendance schedules endpoints"
        },
        {
            "name": "attendance_shifts",
            "description": "Attendance shifts endpoints"
        },
        {
            "name": "holidays",
            "description": "Holidays endpoints"
        },
        {
            "name": "job_sites",
            "description": "Job sites endpoints"
        },
        {
            "name": "timesheets",
            "description": "Timesheets endpoints"
        },
        {
            "name": "budgets",
            "description": "Budget endpoints"
        }
    ],
    "paths": {
        "/v2/users/{user_id}": {
            "get": {
                "summary": "Retrieve a user",
                "description": "Returns the user with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A user",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "operationId": "getV2UsersUserId"
            }
        },
        "/v2/users/me": {
            "get": {
                "summary": "Retrieve the authenticated user",
                "description": "Returns the authenticated user.\n",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A user",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "operationId": "getV2UsersMe"
            }
        },
        "/v2/organizations": {
            "get": {
                "summary": "Retrieve organizations",
                "description": "Returns a collection of organizations the authenticated user is an active member of.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of organizations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "organizations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Organization"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "getV2Organizations"
            },
            "post": {
                "summary": "Creates a new organization",
                "description": "Create a new organization\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "The organization name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "addons",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "timesheet_approvals",
                                "monitor_user_activity",
                                "team_payments",
                                "invoices",
                                "projects",
                                "work_orders",
                                "location_tracking",
                                "job_sites",
                                "attendance_schedules",
                                "time_off",
                                "achievements",
                                "teams",
                                "track_profitability",
                                "expenses",
                                "work_breaks"
                            ]
                        },
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "industry",
                        "type": "string",
                        "default": "Other",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An organization",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "organization": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "postV2Organizations"
            }
        },
        "/v2/organizations/{organization_id}/update_metadata": {
            "put": {
                "summary": "Updates metadata attached to the organization",
                "description": "Updates metadata on the project. Only specify the metadata keys you want to change.\n\nIf the metadata key does not exists it will be create.\n\nTo remove a metadata key pass null as the value.\n\nKeys must:\n- be between 2 and 30 characters\n- only contain lowercase a-z and underscore\n\nValues must:\n- Contain valid UTF8 characeters\n- be no longer than 200 characters\n\nReturns the updated project.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "description": "Organization ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2OrganizationsOrganizationIdUpdateMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An organization",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "organization": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "putV2OrganizationsOrganizationIdUpdateMetadata"
            }
        },
        "/v2/organizations/{organization_id}/update_members": {
            "put": {
                "summary": "Updates members roles for a organization",
                "description": "Updates membership within the organization. Only pass in the members you are wanting to change.\n\nAvailable roles are user, manager, owner, or remove\n\nThe _user_ role simply means that they are a member of the organization and their real role is\ndetermined by their project membership.\nIf they belong to 0 projects they are considered a **project viewer** and do not count toward your plan.\n\nUse the role remove to remove a user from the organization.\nRemoving from the organization will also remove them from all projects and teams in the organization\n\nReturns { success: true } upon successful updating members.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "description": "Organization ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2OrganizationsOrganizationIdUpdateMembers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated successfully"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "putV2OrganizationsOrganizationIdUpdateMembers"
            }
        },
        "/v2/organizations/{organization_id}": {
            "get": {
                "summary": "Retrieve an organization",
                "description": "Returns the organization with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "description": "Organization ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An organization",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "organization": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "getV2OrganizationsOrganizationId"
            }
        },
        "/v2/organizations/{organization_id}/projects": {
            "post": {
                "summary": "Creates a project",
                "description": "Creates a new project.\n\nOnly name is required.\n\nMembers is optional and the available roles are viewer, user, and manager.\n\nReturns the project created.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postV2OrganizationsOrganizationIdProjects"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A project",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "postV2OrganizationsOrganizationIdProjects"
            },
            "get": {
                "summary": "Retrieve projects",
                "description": "Returns a collection of projects.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Project status",
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "archived",
                            "all"
                        ],
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of projects",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "projects": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Project"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "getV2OrganizationsOrganizationIdProjects"
            }
        },
        "/v2/organizations/{organization_id}/members": {
            "get": {
                "summary": "Retrieve members for an organization",
                "description": "Returns a collection of users that are a member of the given organization.\n\n*trackable* - Whether the user can track time.  This is one of 3 values\n- *false* -- meaning tracking has been explicitly disabled for this user regardless of their role\n- *true* -- meaning they are allowed to track time\n- *viewer* -- meaning they are allowed to track time, however as they are only a project viewer (or no\n  memberships) they implicitly can not track on any project\n\n*membership_role* - The basic role in this organization\n- *owner* - An owner of the organization.  This member can do anything within the organization.\n- *manager* - An manager of the organization.  This member can do anything within the organization\n  except things to do with money. (payroll, invoicing, account billing)\n- *user* - (By project). A member of the organization where permissions are defined by their project memberships\n\n*effective_role* - represents an effective role that combines a member's organization role and their project roles\n- *organization_owner* - The member is an organization owner\n- *organization_manager* - The member is an organization manager\n- *project_manager* - The member is an organization user and a manager on all projects and teams\n- *project_user* - The member is an organization user and a user on all projects and teams\n- *project_viewer* - The member is an organization user and a viewer on all projects and teams. Or have no project/team memberships.\n- *by_project* - The member is an organization user and has mixed roles on their projects and team memberships.\n\n\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_removed",
                        "description": "Include members that were removed from the organization",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_projects",
                        "description": "Include project memberships for this member",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of members",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "members": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganizationMember"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "getV2OrganizationsOrganizationIdMembers"
            }
        },
        "/v2/organizations/{organization_id}/last_activities": {
            "get": {
                "summary": "Retrieve members last activity for an organization",
                "description": "Retrieves the organization's last user activities.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_removed",
                        "description": "Include users that were removed",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Last activities for members",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "last_activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LastActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "operationId": "getV2OrganizationsOrganizationIdLastActivities"
            }
        },
        "/v2/organizations/{organization_id}/integrations": {
            "get": {
                "summary": "Retrieve integrations",
                "description": "Returns a collection of integrations.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of integrations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "integrations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Integration"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "integrations"
                ],
                "operationId": "getV2OrganizationsOrganizationIdIntegrations"
            }
        },
        "/v2/organizations/{organization_id}/invites": {
            "post": {
                "summary": "Invite a user to the organization",
                "description": "Returns details for the created invite.\n\nNote: If there is an account for the email in Hubstaff, the invite will be auto accepted.    \n\nThere is a rate limit on how many invites you may create.\n\nThe role is a combination role of one of the following.\n- organization_manager - The user will be invited as an organization manager\n- project_manager - The user will be invited as a project manager\n- project_user - The user will be invited as a project user\n- project_viewer - The user will be invited as a project viewer\n\nIf you do not set any project_ids then any of the project_* roles will end up being project_viewer\n(as they will have no projects).\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "The email to invite",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "role",
                        "description": "The role to invite the user as",
                        "type": "string",
                        "default": "project_user",
                        "enum": [
                            "organization_manager",
                            "project_manager",
                            "project_user",
                            "project_viewer"
                        ],
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "pay_rate",
                        "description": "A pay rate to set for the user",
                        "type": "number",
                        "format": "float",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "project_ids",
                        "description": "List of project IDs to add the user to after they accept the invite",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An invite",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invite": {
                                    "$ref": "#/definitions/Invite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "invites"
                ],
                "operationId": "postV2OrganizationsOrganizationIdInvites"
            },
            "get": {
                "summary": "Retreive invites",
                "description": "Returns a collection of pending invites.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "An email to search for a pending invitation by",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Filter invites by status",
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "all",
                            "pending",
                            "accepted",
                            "expired"
                        ],
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of invites",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invites": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Invite"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "invites"
                ],
                "operationId": "getV2OrganizationsOrganizationIdInvites"
            }
        },
        "/v2/organizations/{organization_id}/application_activities": {
            "get": {
                "summary": "Retrieve application activities",
                "description": "Returns a collection of application activities.\nThe application activities can optionally be filtered to those of a given organization.\n\nThe preferred endpoints to fetch data about activities are the daily endpoints.\n\nDate range Limit: 7 days\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of application activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "applications": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "application_activities"
                ],
                "operationId": "getV2OrganizationsOrganizationIdApplicationActivities"
            }
        },
        "/v2/organizations/{organization_id}/application_activities/daily": {
            "get": {
                "summary": "Retrieve daily application activities",
                "description": "Returns a collection of daily application activities.\nDaily application activities are aggregated application activities by the organization date.\nThe daily application activities can optionally be filtered to those of a given organization.\nDate range Limit: 2 weeks\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of daily application activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "daily_applications": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DailyApplicationActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "application_activities"
                ],
                "operationId": "getV2OrganizationsOrganizationIdApplicationActivitiesDaily"
            }
        },
        "/v2/organizations/{organization_id}/url_activities": {
            "get": {
                "summary": "Retrieve url activities",
                "description": "Returns a collection of url activities.\nThe url activities can optionally be filtered to those of a given organization.\n\nThe preferred endpoints to fetch data about activities are the daily endpoints.\n\nDate range Limit: 7 days\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of url activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "urls": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UrlActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "url_activities"
                ],
                "operationId": "getV2OrganizationsOrganizationIdUrlActivities"
            }
        },
        "/v2/organizations/{organization_id}/url_activities/daily": {
            "get": {
                "summary": "Retrieve daily url activities",
                "description": "Returns a collection of daily url activities.\nDaily url activities are aggregated url activities by the organization date.\nThe url activities can optionally be filtered to those of a given organization.\nDate range Limit: 14 days\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of daily url activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "daily_urls": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DailyUrlActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "url_activities"
                ],
                "operationId": "getV2OrganizationsOrganizationIdUrlActivitiesDaily"
            }
        },
        "/v2/organizations/{organization_id}/time_edit_logs": {
            "get": {
                "summary": "Retrieve time edit logs",
                "description": "Returns a collection of time edited logs.\nDate range Limit: 31 days\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created[stop]",
                        "description": "Stop time (ISO 8601, exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of time edit logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "time_edit_logs": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeEditLog"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "time_edit_logs"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTimeEditLogs"
            }
        },
        "/v2/organizations/{organization_id}/team_payments": {
            "get": {
                "summary": "Retrieve team payments",
                "description": "Returns a collection of team payments.\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created[stop]",
                        "description": "Stop time (ISO 8601, exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of team payments",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "team_payments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TeamPayment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "team_payments"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTeamPayments"
            }
        },
        "/v2/organizations/{organization_id}/activities": {
            "get": {
                "summary": "Retrieve activities",
                "description": "Returns a collection of activities.\nThe activities can optionally be filtered to those of a given organization.\n\nThe preferred endpoints to fetch data about activities are the daily endpoints. \n\nDate range Limit: 7 days\nEarliest Date: 6 full months\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Activity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "activities"
                ],
                "operationId": "getV2OrganizationsOrganizationIdActivities"
            }
        },
        "/v2/organizations/{organization_id}/activities/daily": {
            "get": {
                "summary": "Retrieve daily activities",
                "description": "Returns a collection of daily activities.\nDaily activities are aggregated activities by the organization date.\nThe daily activities can optionally be filtered to those of a given organization.\nDate range Limit: 31 days\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of daily activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "daily_activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DailyActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "activities"
                ],
                "operationId": "getV2OrganizationsOrganizationIdActivitiesDaily"
            }
        },
        "/v2/organizations/{organization_id}/tasks": {
            "get": {
                "summary": "Retrieve tasks",
                "description": "Returns a collection of tasks.\nThe tasks can optionally be filtered to those of a given organization.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "A status or list of statuses to filter",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "deleted",
                                "archived",
                                "archived_native_active",
                                "archived_native_completed",
                                "archived_native_deleted"
                            ]
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of tasks",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tasks": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "tasks"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTasks"
            }
        },
        "/v2/organizations/{organization_id}/screenshots": {
            "get": {
                "summary": "Retrieve screenshots",
                "description": "Returns a collection of screenshots\nThe screenshots can optionally be filtered to those of a given organization.\nDate range Limit: 7 days\nEarliest Date: 6 full months\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of screenshots",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "screenshots": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Screenshot"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "screenshots"
                ],
                "operationId": "getV2OrganizationsOrganizationIdScreenshots"
            }
        },
        "/v2/organizations/{organization_id}/notes": {
            "get": {
                "summary": "Retrieve notes",
                "description": "Returns a collection of notes\nThe notes can optionally be filtered to those of a given organization.\nDate range Limit: 31 days\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of notes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "notes"
                ],
                "operationId": "getV2OrganizationsOrganizationIdNotes"
            }
        },
        "/v2/organizations/{organization_id}/clients": {
            "post": {
                "summary": "Creates a client",
                "description": "Returns the client created.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postV2OrganizationsOrganizationIdClients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A client",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "client": {
                                    "$ref": "#/definitions/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "clients"
                ],
                "operationId": "postV2OrganizationsOrganizationIdClients"
            },
            "get": {
                "summary": "Retrieve organization clients",
                "description": "Returns a collection of clients that are a member of the given organization\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Client status",
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "archived",
                            "all"
                        ],
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of clients",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clients": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Client"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "clients"
                ],
                "operationId": "getV2OrganizationsOrganizationIdClients"
            }
        },
        "/v2/organizations/{organization_id}/locations": {
            "get": {
                "summary": "Retrieve locations",
                "description": "Returns a collection of locations.\nDate range Limit: 7 days\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of locations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "locations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Location"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "locations"
                ],
                "operationId": "getV2OrganizationsOrganizationIdLocations"
            }
        },
        "/v2/organizations/{organization_id}/client_invoices": {
            "get": {
                "summary": "Retrieve client invoices",
                "description": "Returns a collection of client invoices.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "client_ids",
                        "description": "List of client IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "issue_date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "issue_date[stop]",
                        "description": "Stop date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Invoice status",
                        "type": "string",
                        "enum": [
                            "draft",
                            "open",
                            "closed"
                        ],
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_line_items",
                        "description": "Include invoice line items",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of client invoices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "client_invoices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ClientInvoice"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "client_invoices"
                ],
                "operationId": "getV2OrganizationsOrganizationIdClientInvoices"
            }
        },
        "/v2/organizations/{organization_id}/team_invoices": {
            "get": {
                "summary": "Retrieve team invoices",
                "description": "Returns a collection of team invoices.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "issue_date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "issue_date[stop]",
                        "description": "Stop date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Invoice status",
                        "type": "string",
                        "enum": [
                            "draft",
                            "open",
                            "closed"
                        ],
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_line_items",
                        "description": "Include invoice line items",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of team invoices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "team_invoices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TeamInvoice"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "team_invoices"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTeamInvoices"
            }
        },
        "/v2/organizations/{organization_id}/time_off_policies": {
            "get": {
                "summary": "Retrieve time off policies",
                "description": "Returns a collection of time off policies.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of time off policies",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "time_off_policies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeOffPolicy"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "time_off_policies"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTimeOffPolicies"
            }
        },
        "/v2/organizations/{organization_id}/time_off_requests": {
            "get": {
                "summary": "Retrieve time off requests",
                "description": "Returns a collection of team payments.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of time off requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "time_off_requests": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeOffRequest"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "time_off_requests"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTimeOffRequests"
            }
        },
        "/v2/organizations/{organization_id}/attendance_schedules": {
            "post": {
                "summary": "Create an attendance schedule",
                "description": "Create and return a new attendance schedule.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "user_id",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "start_date",
                        "description": "Attendance Schedule Start Date",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "start_time",
                        "description": "Attendance Schedule Start Time, 24 hour time in 30 minutes intervals (h:mm)",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "duration",
                        "description": "Shift duration in seconds",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1800,
                        "maximum": 86400,
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "minimum_time",
                        "description": "Minimum shift time in seconds",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "use_time_zone",
                        "description": "What time zone to use",
                        "type": "string",
                        "enum": [
                            "organization",
                            "user"
                        ],
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "repeat_schedule",
                        "description": "Shift repetition schedule",
                        "type": "string",
                        "default": "never",
                        "enum": [
                            "never",
                            "weekly",
                            "bi_weekly"
                        ],
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "weekdays",
                        "description": "Shift repetition week days",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "sun",
                                "mon",
                                "tue",
                                "wed",
                                "thu",
                                "fri",
                                "sat"
                            ]
                        },
                        "collectionFormat": "brackets",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "repeat_until",
                        "description": "Shift end date",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "excluded_dates",
                        "description": "Excluded dates from the repetition schedule",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date"
                        },
                        "collectionFormat": "brackets",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "attendance schedule created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attendance_schedule": {
                                    "$ref": "#/definitions/AttendanceSchedule"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "attendance_schedules"
                ],
                "operationId": "postV2OrganizationsOrganizationIdAttendanceSchedules"
            },
            "get": {
                "summary": "Retrieve attendance schedules",
                "description": "Returns a collection of attendance schedules. The date filter will match schedules that cover the dates (e.g. a repeating schedule)\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of attendance schedules",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attendance_schedules": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AttendanceSchedule"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "attendance_schedules"
                ],
                "operationId": "getV2OrganizationsOrganizationIdAttendanceSchedules"
            }
        },
        "/v2/organizations/{organization_id}/holidays": {
            "get": {
                "summary": "Retrieve holidays",
                "description": "Returns a collection of holidays.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of holidays",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "holidays": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Holiday"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "holidays"
                ],
                "operationId": "getV2OrganizationsOrganizationIdHolidays"
            }
        },
        "/v2/organizations/{organization_id}/job_sites": {
            "get": {
                "summary": "Retrieve job sites",
                "description": "Returns a collection of job sites.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of job sites",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "job_sites": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobSite"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "job_sites"
                ],
                "operationId": "getV2OrganizationsOrganizationIdJobSites"
            }
        },
        "/v2/organizations/{organization_id}/timesheets": {
            "get": {
                "summary": "Retrieve timesheets",
                "description": "Returns a collection of timesheets.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Invoice status",
                        "type": "string",
                        "enum": [
                            "open",
                            "submitted",
                            "approved",
                            "denied"
                        ],
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of timesheets",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "timesheets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Timesheet"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "timesheets"
                ],
                "operationId": "getV2OrganizationsOrganizationIdTimesheets"
            }
        },
        "/v2/organizations/{organization_id}/attendance_shifts": {
            "get": {
                "summary": "Retrieve attendance shifts",
                "description": "Returns a collection of attendance shifts. The date filter will match shifts that cover the dates\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of attendance shifts",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attendance_shifts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AttendanceShift"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "attendance_shifts"
                ],
                "operationId": "getV2OrganizationsOrganizationIdAttendanceShifts"
            }
        },
        "/v2/organizations/{organization_id}/budget_histories": {
            "get": {
                "summary": "Return list of budget histories",
                "description": "Returns the budget histories for the given organization.\n\nThe project_ids and client_ids filters are processed as a complete set.\n\n- If project_ids 1,2,3 and client_ids 4,5,6 are provided then all budget histories for those\nproject and clients will be returned.\n- If only project_ids 1,2,3 (no client_ids filter) are provided then only budget histories for\nthose projects will be returned (no client budgets at all).\n- If only client_ids 1,2,3 (no project_ids filter) are provided then only budget histories for\nthose clients will be returned (no project budgets at all).\n\nFurther resource may be specified to restrict only returning budget histories for either projects\nor clients.\nThe resource filter is combined with the project_ids/client_ids filters thus\n- If only project_ids is provided and resource = 'client' then no records will be returned\n\nThe start_date filters only apply to the starting date of the start_date of the budget history records.\nThus to fetch only budget histories for this month for all projects specify this filter\n- resource=project and start_date[start]=2021-06-01\n\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "project_ids",
                        "description": "List of project IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "client_ids",
                        "description": "List of client IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "resource",
                        "description": "Only return budgets for this resource type",
                        "type": "string",
                        "enum": [
                            "project",
                            "client"
                        ],
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "start_date[start]",
                        "description": "Include budget histories with a start date on or after this date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "start_date[stop]",
                        "description": "Include budget histories with a start date on or before this date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of budget histories",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "budget_histories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BudgetHistory"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "budgets"
                ],
                "operationId": "getV2OrganizationsOrganizationIdBudgetHistories"
            }
        },
        "/v2/projects/{project_id}/budget_histories": {
            "get": {
                "summary": "Return list of budget histories",
                "description": "Returns the budget histories for the given project.\n\n\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of budget histories",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "budget_histories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BudgetHistory"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "budgets"
                ],
                "operationId": "getV2ProjectsProjectIdBudgetHistories"
            }
        },
        "/v2/projects/{project_id}/locations": {
            "get": {
                "summary": "Retrieve locations",
                "description": "Returns a collection of locations.\nDate range Limit: 7 days\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of locations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "locations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Location"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "locations"
                ],
                "operationId": "getV2ProjectsProjectIdLocations"
            }
        },
        "/v2/projects/{project_id}/notes": {
            "get": {
                "summary": "Retrieve notes",
                "description": "Returns a collection of notes\nThe notes can optionally be filtered to those of a given project.\nDate range Limit: 31 days\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of notes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "notes"
                ],
                "operationId": "getV2ProjectsProjectIdNotes"
            }
        },
        "/v2/projects/{project_id}/screenshots": {
            "get": {
                "summary": "Retrieve screenshots",
                "description": "Returns a collection of screenshots\nThe screenshots can optionally be filtered to those of a given project.\nDate range Limit: 7 days\nEarliest Date: 6 full months\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of screenshots",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "screenshots": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Screenshot"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "screenshots"
                ],
                "operationId": "getV2ProjectsProjectIdScreenshots"
            }
        },
        "/v2/projects/{project_id}/tasks": {
            "post": {
                "summary": "Create a task",
                "description": "Creates a new simple todo for this project.  If this project is integrated with a 3rd party integration you must create the task in the 3rd party tool instead.\n\nReturns the created task.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postV2ProjectsProjectIdTasks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "To-do created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "tasks"
                ],
                "operationId": "postV2ProjectsProjectIdTasks"
            },
            "get": {
                "summary": "Retrieve tasks",
                "description": "Returns a collection of tasks.\nThe tasks can optionally be filtered to those of a given project.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "A status or list of statuses to filter",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "deleted",
                                "archived",
                                "archived_native_active",
                                "archived_native_completed",
                                "archived_native_deleted"
                            ]
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of tasks",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tasks": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "tasks"
                ],
                "operationId": "getV2ProjectsProjectIdTasks"
            }
        },
        "/v2/projects/{project_id}/activities/daily": {
            "get": {
                "summary": "Retrieve daily activities",
                "description": "Returns a collection of daily activities.\nDaily activities are aggregated activities by the organization date.\nThe daily activities can optionally be filtered to those of a given project.\nDate range Limit: 31 days\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of daily activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "daily_activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DailyActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "activities"
                ],
                "operationId": "getV2ProjectsProjectIdActivitiesDaily"
            }
        },
        "/v2/projects/{project_id}/activities": {
            "get": {
                "summary": "Retrieve activities",
                "description": "Returns a collection of activities.\nThe activities can optionally be filtered to those of a given project.\n\nThe preferred endpoints to fetch data about activities are the daily endpoints. \n\nDate range Limit: 7 days\nEarliest Date: 6 full months\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Activity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "activities"
                ],
                "operationId": "getV2ProjectsProjectIdActivities"
            }
        },
        "/v2/projects/{project_id}/time_edit_logs": {
            "get": {
                "summary": "Retrieve time edit logs",
                "description": "Returns a collection of time edited logs.\nDate range Limit: 31 days\nEarliest Date: 3 full years\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "created[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created[stop]",
                        "description": "Stop time (ISO 8601, exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of time edit logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "time_edit_logs": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeEditLog"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "time_edit_logs"
                ],
                "operationId": "getV2ProjectsProjectIdTimeEditLogs"
            }
        },
        "/v2/projects/{project_id}/integration_links": {
            "get": {
                "summary": "Retrieve project integration links for a project",
                "description": "Returns a collection of active project links.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a list of project links",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project_links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IntegrationProjectLink"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "integrations"
                ],
                "operationId": "getV2ProjectsProjectIdIntegrationLinks"
            }
        },
        "/v2/projects/{project_id}/url_activities/daily": {
            "get": {
                "summary": "Retrieve daily url activities",
                "description": "Returns a collection of daily url activities.\nDaily url activities are aggregated url activities by the organization date.\nThe url activities can optionally be filtered to those of a given project.\nDate range Limit: 14 days\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of daily url activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "daily_urls": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DailyUrlActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "url_activities"
                ],
                "operationId": "getV2ProjectsProjectIdUrlActivitiesDaily"
            }
        },
        "/v2/projects/{project_id}/url_activities": {
            "get": {
                "summary": "Retrieve url activities",
                "description": "Returns a collection of url activities.\nThe url activities can optionally be filtered to those of a given project.\n\nThe preferred endpoints to fetch data about activities are the daily endpoints.\n\nDate range Limit: 7 days\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of url activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "urls": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UrlActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "url_activities"
                ],
                "operationId": "getV2ProjectsProjectIdUrlActivities"
            }
        },
        "/v2/projects/{project_id}/application_activities/daily": {
            "get": {
                "summary": "Retrieve daily application activities",
                "description": "Returns a collection of daily application activities.\nDaily application activities are aggregated application activities by the organization date.\nThe daily application activities can optionally be filtered to those of a given project.\nDate range Limit: 2 weeks\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "date[start]",
                        "description": "Start date (ISO 8601)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date[stop]",
                        "description": "Stop date (ISO 8601, Inclusive)",
                        "type": "string",
                        "format": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of daily application activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "daily_applications": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DailyApplicationActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "application_activities"
                ],
                "operationId": "getV2ProjectsProjectIdApplicationActivitiesDaily"
            }
        },
        "/v2/projects/{project_id}/application_activities": {
            "get": {
                "summary": "Retrieve application activities",
                "description": "Returns a collection of application activities.\nThe application activities can optionally be filtered to those of a given project.\n\nThe preferred endpoints to fetch data about activities are the daily endpoints.\n\nDate range Limit: 7 days\nEarliest Date: 1 full month\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "time_slot[start]",
                        "description": "Start time (ISO 8601)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "time_slot[stop]",
                        "description": "Stop time (ISO 8601, Exclusive)",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_ids",
                        "description": "List of user IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "task_ids",
                        "description": "List of task IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of application activities",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "applications": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "application_activities"
                ],
                "operationId": "getV2ProjectsProjectIdApplicationActivities"
            }
        },
        "/v2/projects/{project_id}/last_activities": {
            "get": {
                "summary": "Retrieve members last activity for a project",
                "description": "Retrieves the project's last user activities.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_removed",
                        "description": "Include users that were removed",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Last activities for members",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "last_activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LastActivity"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "getV2ProjectsProjectIdLastActivities"
            }
        },
        "/v2/projects/{project_id}/members": {
            "get": {
                "summary": "Retrieve members for a project",
                "description": "Returns a collection of users that are a member of the given project.\n\n\n*membership_role* - The permission role the member has in this project\n- *manager* - An manager can track time, see data for any member within the project, can change settings, and manage membership within the project\n- *user* - A user can track time against the project and see only their own data within the project\n- *viewer* - A viewer can report on data for any member within the project but can not change anything\n\n**Note**: A member must have membership within a project in order to track on that project, even if they are an organization owner or manager\n\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "include_removed",
                        "description": "Include members that were removed from the project",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "project_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of members",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "members": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProjectMember"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "getV2ProjectsProjectIdMembers"
            }
        },
        "/v2/projects/{project_id}/update_metadata": {
            "put": {
                "summary": "Updates metadata attached to the project",
                "description": "Updates metadata on the project. Only specify the metadata keys you want to change.\n\nIf the metadata key does not exists it will be create.\n\nTo remove a metadata key pass null as the value.\n\nKeys must:\n- be between 2 and 30 characters\n- only contain lowercase a-z and underscore\n\nValues must:\n- Contain valid UTF8 characeters\n- be no longer than 200 characters\n\nReturns the updated project.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_id",
                        "description": "Project ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2ProjectsProjectIdUpdateMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A project",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "putV2ProjectsProjectIdUpdateMetadata"
            }
        },
        "/v2/projects/{project_id}/update_members": {
            "put": {
                "summary": "Updates members roles for a project",
                "description": "Updates membership within the project. Only pass in the members you are wanting to change.\n\nAvailable roles are viewer, user, manager, or remove\nUse the role remove to remove a user from the project.\n\nReturns { success: true } upon successful updating members.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_id",
                        "description": "Project ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2ProjectsProjectIdUpdateMembers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated successfully"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "putV2ProjectsProjectIdUpdateMembers"
            }
        },
        "/v2/projects/{project_id}": {
            "put": {
                "summary": "Update a project",
                "description": "Updates details for a project. Only pass in the fields you are wanting to change.\n\nTo unset the budget, pass in {budget:nil}.  To update the budget you must specify the complete budget configuration.\n\nWhen restoring an archived project you can only change the status column. Changing other columns will return a 403 error.\n\nReturns the updated project.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_id",
                        "description": "Project ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2Projects"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A project",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "putV2ProjectsProjectId"
            },
            "get": {
                "summary": "Retrieve a project",
                "description": "Returns the project with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_id",
                        "description": "Project ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A project",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "projects"
                ],
                "operationId": "getV2ProjectsProjectId"
            }
        },
        "/v2/invites/{invite_id}": {
            "delete": {
                "summary": "Deletes a specific invite",
                "description": "Deletes a pending invite.\n\nNote: Accepted invites cannot be deleted\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "invite_id",
                        "description": "Invite ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deletion successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invite": {
                                    "$ref": "#/definitions/Invite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "invites"
                ],
                "operationId": "deleteV2InvitesInviteId"
            },
            "put": {
                "summary": "Update a pending invite",
                "description": "Returns details for the updated invite.\n\nNote: Accepted invites can not be updated.\n\nAny field not provided will not be changed\n\nTo clear the project_ids send the value 'none'\n\nTo clear the pay_rate send the value 'none'\n\nThe role is a combination role of one of the following.\n- organization_manager - The user will be invited as an organization manager\n- project_manager - The user will be invited as a project manager\n- project_user - The user will be invited as a project user\n- project_viewer - The user will be invited as a project viewer\n\nIf you do not set any project_ids then any of the project_* roles will end up being project_viewer\n(as they will have no projects).\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "invite_id",
                        "description": "Invite ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "role",
                        "description": "The role to invite the user as",
                        "type": "string",
                        "enum": [
                            "organization_manager",
                            "project_manager",
                            "project_user",
                            "project_viewer"
                        ],
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "pay_rate",
                        "description": "A pay rate to set for the user",
                        "type": "number",
                        "format": "float",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "project_ids",
                        "description": "List of project IDs to add the user to after they accept the invite",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An invite",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invite": {
                                    "$ref": "#/definitions/Invite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "invites"
                ],
                "operationId": "putV2InvitesInviteId"
            },
            "get": {
                "summary": "Retreive a specific invite",
                "description": "Returns details for a single invite.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "invite_id",
                        "description": "Invite ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An invite",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invite": {
                                    "$ref": "#/definitions/Invite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "invites"
                ],
                "operationId": "getV2InvitesInviteId"
            }
        },
        "/v2/budget_histories/{budget_history_id}": {
            "get": {
                "summary": "Fetch a single budget history item",
                "description": "Returns the budget history with the given ID\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "budget_history_id",
                        "description": "Budget History ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A budget history",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "budget_history": {
                                    "$ref": "#/definitions/BudgetHistory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "budgets"
                ],
                "operationId": "getV2BudgetHistoriesBudgetHistoryId"
            }
        },
        "/v2/tasks/{task_id}": {
            "delete": {
                "summary": "Delete a task",
                "description": "Returns the updated task.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_id",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "To-do deleted",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "tasks"
                ],
                "operationId": "deleteV2TasksTaskId"
            },
            "put": {
                "summary": "Update a task",
                "description": "Changes a task's summary or assignee. Only pass in the fields you are wanting to change.\n\nOnly simple todos are allowed to be updated. 3rd party tasks must be updated within their system.\n\nRequires passing in the lock_version from the task fetch in order to update.\n\nReturns the updated task.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_id",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2Tasks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "To-do updated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "tasks"
                ],
                "operationId": "putV2TasksTaskId"
            },
            "get": {
                "summary": "Retrieve a task",
                "description": "Returns the task with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_id",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "tasks"
                ],
                "operationId": "getV2TasksTaskId"
            }
        },
        "/v2/notes/{note_id}": {
            "get": {
                "summary": "Retrieve a note",
                "description": "Returns the note with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "note_id",
                        "description": "Note ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A note",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "$ref": "#/definitions/Note"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "notes"
                ],
                "operationId": "getV2NotesNoteId"
            }
        },
        "/v2/team_payments/{team_payment_id}": {
            "get": {
                "summary": "Retrieve a team payment",
                "description": "Returns the team payment with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "team_payment_id",
                        "description": "Team payment ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A team payment",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "team_payment": {
                                    "$ref": "#/definitions/TeamPayment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "team_payments"
                ],
                "operationId": "getV2TeamPaymentsTeamPaymentId"
            }
        },
        "/v2/integrations/{integration_id}/user_links": {
            "get": {
                "summary": "Retrieve user integration links for a integration",
                "description": "Returns a collection of active project links.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "integration_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a list of user links",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IntegrationUserLink"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "integrations"
                ],
                "operationId": "getV2IntegrationsIntegrationIdUserLinks"
            }
        },
        "/v2/integrations/{integration_id}/project_links": {
            "get": {
                "summary": "Retrieve project integration links for a integration",
                "description": "Returns a collection of active project links.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "integration_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a list of project links",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project_links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IntegrationProjectLink"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "integrations"
                ],
                "operationId": "getV2IntegrationsIntegrationIdProjectLinks"
            }
        },
        "/v2/clients/{client_id}/budget_histories": {
            "get": {
                "summary": "Return list of budget histories",
                "description": "Returns the budget histories for the given client.\n\n\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_start_id",
                        "description": "The page start ID.",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_limit",
                        "description": "The default page size",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "path",
                        "name": "client_id",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of budget histories",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "budget_histories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BudgetHistory"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "budgets"
                ],
                "operationId": "getV2ClientsClientIdBudgetHistories"
            }
        },
        "/v2/clients/{client_id}": {
            "put": {
                "summary": "Update a client",
                "description": "Updates details for a client. Only pass in the fields you are wanting to change.\n\nTo unset the budget, pass in {budget:nil}.  To update the budget you must specify the complete budget configuration.\nTo clear the invoice_notes or net_terms (to use the defaults on the organizations) specify null as the value.\n\nReturns the updated client.\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_id",
                        "description": "Client ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putV2Clients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A client",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "client": {
                                    "$ref": "#/definitions/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "clients"
                ],
                "operationId": "putV2ClientsClientId"
            },
            "get": {
                "summary": "Retrieve a client",
                "description": "Returns the client with a given ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_id",
                        "description": "Client ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A client",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "client": {
                                    "$ref": "#/definitions/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "clients"
                ],
                "operationId": "getV2ClientsClientId"
            }
        },
        "/v2/attendance_schedules/{attendance_schedule_id}": {
            "put": {
                "summary": "Update an attendance schedule",
                "description": "Update an return an attendance schedule\n",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "attendance_schedule_id",
                        "description": "Attendance schedule ID",
                        "type": "integer",
                        "format": "int32",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "start_date",
                        "description": "Attendance Schedule Start Date",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "start_time",
                        "description": "Attendance Schedule Start Time, 24 hour time in 30 minutes intervals (h:mm)",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "use_time_zone",
                        "description": "What time zone to use",
                        "type": "string",
                        "enum": [
                            "organization",
                            "user"
                        ],
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "duration",
                        "description": "Shift duration in seconds",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1800,
                        "maximum": 86400,
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "minimum_time",
                        "description": "Minimum shift time in seconds",
                        "type": "integer",
                        "format": "int32",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "repeat_schedule",
                        "description": "Shift repetition schedule",
                        "type": "string",
                        "enum": [
                            "never",
                            "weekly",
                            "bi_weekly"
                        ],
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "repeat_until",
                        "description": "Shift end date",
                        "type": "string",
                        "format": "date",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "weekdays",
                        "description": "Shift repetition week days",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "sun",
                                "mon",
                                "tue",
                                "wed",
                                "thu",
                                "fri",
                                "sat"
                            ]
                        },
                        "collectionFormat": "brackets",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "excluded_dates",
                        "description": "Excluded dates from the repetition schedule",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date"
                        },
                        "collectionFormat": "brackets",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "add_excluded_dates",
                        "description": "Excluded dates to add",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date"
                        },
                        "collectionFormat": "brackets",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "remove_excluded_dates",
                        "description": "Excluded dates to remove",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date"
                        },
                        "collectionFormat": "brackets",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An attendance schedule",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attendance_schedule": {
                                    "$ref": "#/definitions/AttendanceSchedule"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "403": {
                        "description": "API access is only for organizations on an active plan",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "404": {
                        "description": "Could not find record",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/Hubstaff_Public_V2_Entities_Error"
                        }
                    }
                },
                "tags": [
                    "attendance_schedules"
                ],
                "operationId": "putV2AttendanceSchedulesAttendanceScheduleId"
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "name": {
                    "type": "string",
                    "description": "User name"
                },
                "email": {
                    "type": "string",
                    "description": "User email address"
                },
                "time_zone": {
                    "type": "string",
                    "description": "User time zone"
                },
                "status": {
                    "type": "string",
                    "description": "User status"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "User model"
        },
        "Hubstaff_Public_V2_Entities_Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Error code"
                },
                "error": {
                    "type": "string",
                    "description": "Descriptive error message"
                }
            },
            "description": "Hubstaff_Public_V2_Entities_Error model"
        },
        "Organization": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "name": {
                    "type": "string",
                    "description": "Organization name"
                },
                "status": {
                    "type": "string",
                    "description": "Organization status"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "metadata": {
                    "type": "object",
                    "description": "Metadata attached to the project"
                },
                "invite_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Invite URL"
                }
            },
            "description": "Organization model"
        },
        "putV2OrganizationsOrganizationIdUpdateMetadata": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string",
                                "description": "The metadata key"
                            },
                            "value": {
                                "type": "string",
                                "description": "The value for the metadata key"
                            }
                        },
                        "required": [
                            "key",
                            "value"
                        ]
                    }
                }
            },
            "required": [
                "metadata"
            ],
            "description": "Updates metadata attached to the organization"
        },
        "putV2OrganizationsOrganizationIdUpdateMembers": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "user_id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "User ID"
                            },
                            "role": {
                                "type": "string",
                                "description": "Role for the user.",
                                "enum": [
                                    "user",
                                    "manager",
                                    "owner",
                                    "remove"
                                ]
                            }
                        },
                        "required": [
                            "user_id",
                            "role"
                        ]
                    }
                }
            },
            "required": [
                "members"
            ],
            "description": "Updates members roles for a organization"
        },
        "postV2OrganizationsOrganizationIdProjects": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Project name"
                },
                "description": {
                    "type": "string",
                    "description": "Project description"
                },
                "metadata": {
                    "type": "object",
                    "description": "Project metadata. See the update_metadata endpoint"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "user_id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "User ID"
                            },
                            "role": {
                                "type": "string",
                                "description": "Role for the user",
                                "enum": [
                                    "viewer",
                                    "user",
                                    "manager"
                                ]
                            }
                        },
                        "required": [
                            "user_id",
                            "role"
                        ]
                    }
                },
                "client_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The client ID"
                },
                "billable": {
                    "type": "boolean",
                    "description": "Whether activity logged against this project is billable by default (default is true)"
                },
                "budget": {
                    "type": "object",
                    "description": "Budget configuration",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The method for controlling the budget",
                            "enum": [
                                "cost",
                                "hours"
                            ]
                        },
                        "rate": {
                            "type": "string",
                            "description": "When budget type is cost, specifies which rate to use.",
                            "enum": [
                                "bill_rate",
                                "pay_rate"
                            ],
                            "default": "bill_rate"
                        },
                        "cost": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is cost. defines the cost limit."
                        },
                        "hours": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is hours. defines the hours limit."
                        },
                        "start_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The start date for the budget."
                        },
                        "recurrence": {
                            "type": "string",
                            "description": "If given, makes budget reset on a monthly basis",
                            "enum": [
                                "monthly"
                            ]
                        },
                        "include_non_billable": {
                            "type": "boolean",
                            "description": "Whether the budget includes non billable time",
                            "default": true
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "near_limit": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The percentage threshold for notifying when approaching the budget."
                                }
                            }
                        }
                    },
                    "required": [
                        "type"
                    ]
                }
            },
            "required": [
                "name"
            ],
            "description": "Creates a project"
        },
        "Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "name": {
                    "type": "string",
                    "description": "Project name"
                },
                "description": {
                    "type": "string",
                    "description": "Project description"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "status": {
                    "type": "string",
                    "description": "Project status"
                },
                "client_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Client ID"
                },
                "billable": {
                    "type": "boolean",
                    "description": "Default state of billable attribute for new activity"
                },
                "budget": {
                    "$ref": "#/definitions/Budget"
                },
                "metadata": {
                    "type": "object",
                    "description": "Metadata attached to the project"
                }
            },
            "description": "Project model"
        },
        "Budget": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The budget type"
                },
                "rate": {
                    "type": "string",
                    "description": "The budget rate type"
                },
                "cost": {
                    "type": "number",
                    "format": "float",
                    "description": "The budget cost limit"
                },
                "hours": {
                    "type": "number",
                    "format": "float",
                    "description": "The budget hours limit"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The budget start date"
                },
                "alerts": {
                    "type": "object",
                    "properties": {
                        "near_limit": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The budget near limit percentage"
                        }
                    }
                },
                "recurrence": {
                    "type": "string",
                    "description": "The budget recurrence frequency"
                },
                "include_non_billable": {
                    "type": "boolean",
                    "description": "Whether the budget includes non-billable time"
                }
            }
        },
        "OrganizationMember": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "pay_rate": {
                    "type": "string",
                    "description": "Pay rate"
                },
                "bill_rate": {
                    "type": "string",
                    "description": "Bill rate"
                },
                "currency": {
                    "type": "string",
                    "description": "Currency of pay and bill rates"
                },
                "membership_role": {
                    "type": "string",
                    "description": "Membership role"
                },
                "membership_status": {
                    "type": "string",
                    "description": "Membership status"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "removed_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the member was removed"
                },
                "last_client_activity": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last client activity of user"
                },
                "project_members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedProjectMember"
                    },
                    "description": "List of project memberships"
                },
                "pay_period": {
                    "type": "string",
                    "description": "Pay period"
                },
                "fixed_pay_rate": {
                    "type": "string",
                    "description": "Fixed pay rate"
                },
                "trackable": {
                    "type": "string",
                    "description": "Whether the member has tracking enabled, disabled or implicitly disabled"
                },
                "effective_role": {
                    "type": "string",
                    "description": "A virtual membership role that takes into account the project memberships"
                }
            },
            "description": "OrganizationMember model"
        },
        "NestedProjectMember": {
            "type": "object",
            "properties": {
                "pay_rate": {
                    "type": "string",
                    "description": "Pay rate"
                },
                "bill_rate": {
                    "type": "string",
                    "description": "Bill rate"
                },
                "currency": {
                    "type": "string",
                    "description": "Currency of pay and bill rates"
                },
                "membership_role": {
                    "type": "string",
                    "description": "Membership role"
                },
                "membership_status": {
                    "type": "string",
                    "description": "Membership status"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "removed_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the member was removed"
                },
                "last_client_activity": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last client activity of user"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                }
            }
        },
        "LastActivity": {
            "type": "object",
            "properties": {
                "last_client_activity": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last client activity of user"
                },
                "last_project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Last project ID the user worked on"
                },
                "last_task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Last task ID the user worked on"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                }
            },
            "description": "LastActivity model"
        },
        "Integration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integration ID"
                },
                "name": {
                    "type": "string",
                    "description": "Integration name"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "type": {
                    "type": "string",
                    "description": "Integration type"
                },
                "last_sync_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last time the integration was synced"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "disabled_reason": {
                    "type": "string",
                    "description": "Disabled reason"
                }
            },
            "description": "Integration model"
        },
        "Invite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Invite ID"
                },
                "email": {
                    "type": "string",
                    "description": "Invite email"
                },
                "invited_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID for who created the invite"
                },
                "pay_rate": {
                    "type": "string",
                    "description": "Pay rate"
                },
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "Projects to add the user to once invite is accepted"
                },
                "role": {
                    "type": "string",
                    "description": "The role they will be added as once accepted"
                },
                "status": {
                    "type": "string",
                    "description": "Invite status"
                },
                "accepted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the invite was accepted"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "Invite model"
        },
        "ApplicationActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Application activity ID"
                },
                "name": {
                    "type": "string",
                    "description": "Application name"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "time_slot": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time slot"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time in seconds spent in this application"
                },
                "activations": {
                    "type": "integer",
                    "format": "int32",
                    "description": "How many times the application was switched to in this time block"
                }
            },
            "description": "ApplicationActivity model"
        },
        "DailyApplicationActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Daily application activity ID"
                },
                "name": {
                    "type": "string",
                    "description": "Application name"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time in seconds spent in this application"
                },
                "activations": {
                    "type": "integer",
                    "format": "int32",
                    "description": "How many times the application was switched to on this date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "DailyApplicationActivity model"
        },
        "UrlActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "URL activity ID"
                },
                "site": {
                    "type": "string",
                    "description": "URL site"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "time_slot": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time slot"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time in seconds spent on this site"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UrlActivityDetail"
                    },
                    "description": "URL activity details"
                }
            },
            "description": "UrlActivity model"
        },
        "UrlActivityDetail": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Page title"
                },
                "url": {
                    "type": "string",
                    "description": "Visited URL"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time in seconds spent on this URL"
                }
            }
        },
        "DailyUrlActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Daily URL activity ID"
                },
                "site": {
                    "type": "string",
                    "description": "URL site"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time in seconds spent on this site"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "DailyUrlActivity model"
        },
        "TimeEditLog": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time edit log ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time of the final time entry"
                },
                "stops_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The stop time of the final time entry"
                },
                "original_starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time of the original time entry"
                },
                "original_stops_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The stop time of the original time entry"
                },
                "blame_user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID who created the time edit log"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID to which the time edit log belongs"
                },
                "original_project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Original Project ID"
                },
                "original_task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Original Task ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "action": {
                    "type": "string",
                    "description": "Action type"
                },
                "added_duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of seconds that were added due to this edit"
                },
                "deleted_duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of seconds that were deleted due to this edit"
                },
                "replaced_duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of seconds that were replaced due ot this edit"
                },
                "reason": {
                    "type": "string",
                    "description": "Reason for making the change"
                }
            },
            "description": "TimeEditLog model"
        },
        "TeamPayment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Payment ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "organization_id": {
                    "type": "string",
                    "description": "Organization ID"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Start date period for team payment"
                },
                "stop_date": {
                    "type": "string",
                    "format": "date",
                    "description": "End date period for team payment"
                },
                "blame_user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID who made the payment"
                },
                "note": {
                    "type": "string",
                    "description": "A note for this team payment"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time worked in seconds"
                },
                "amount": {
                    "type": "string",
                    "description": "Payment amount"
                },
                "currency": {
                    "type": "string",
                    "description": "Payment currency"
                },
                "payment_source": {
                    "type": "string",
                    "description": "Payment source type"
                },
                "paid_via_payroll": {
                    "type": "boolean",
                    "description": "Paid via the payroll gateway"
                },
                "unpaid_amount": {
                    "type": "string",
                    "description": "The amount left to be paid"
                },
                "payment_gateway": {
                    "type": "string",
                    "description": "The payroll gateway used to pay"
                },
                "payment_complete": {
                    "type": "boolean",
                    "description": "Payment completion status"
                },
                "next_payment_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The next time this payment will be retried"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TeamPaymentDetail"
                    },
                    "description": "Team payment details"
                }
            },
            "description": "TeamPayment model"
        },
        "TeamPaymentDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Payment detail ID"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date for the time worked"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Amount of time tracked in seconds"
                },
                "pay_rate": {
                    "type": "string",
                    "description": "The pay rate for this entry"
                },
                "amount": {
                    "type": "string",
                    "description": "The amount paid for this entry"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency for the pay rate and amount"
                },
                "payment_type": {
                    "type": "string",
                    "description": "The type of payment detail entry"
                },
                "payment_complete": {
                    "type": "boolean",
                    "description": "Is this detail paid"
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Activity ID"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "time_slot": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time slot"
                },
                "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time tracking was started within time slot"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "keyboard": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of time keyboard was active within the time worked"
                },
                "mouse": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of time mouse was active within the time worked"
                },
                "overall": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of overall time active within the time worked"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time worked in seconds"
                },
                "billable": {
                    "type": "boolean",
                    "description": "Whether the time is billable"
                },
                "paid": {
                    "type": "boolean",
                    "description": "Whether the time has been marked paid"
                },
                "client_invoiced": {
                    "type": "boolean",
                    "description": "Whether the time has been invoiced to a client"
                },
                "team_invoiced": {
                    "type": "boolean",
                    "description": "Whether the time has been invoiced for a team member"
                },
                "immutable": {
                    "type": "boolean",
                    "description": "Whether the time is locked"
                },
                "timesheet_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timesheet for this activity"
                },
                "timesheet_locked": {
                    "type": "boolean",
                    "description": "Whether the timesheet is locking this activity"
                },
                "time_type": {
                    "type": "string",
                    "description": "The type of activity this is"
                },
                "client": {
                    "type": "string",
                    "description": "Which client the activity originated from"
                }
            },
            "description": "Activity model"
        },
        "DailyActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Daily activity ID"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                },
                "keyboard": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of time keyboard was active within the time worked"
                },
                "mouse": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of time mouse was active within the time worked"
                },
                "overall": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of overall time active within the time worked"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time worked in seconds"
                },
                "manual": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of aggregated manual time"
                },
                "idle": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of aggregated idle time"
                },
                "resumed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of aggregated resumed time"
                },
                "billable": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount of aggregated billable time"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "DailyActivity model"
        },
        "Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task id"
                },
                "integration_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integration ID"
                },
                "status": {
                    "type": "string",
                    "description": "Task status"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "project_type": {
                    "type": "string",
                    "description": "Project type"
                },
                "summary": {
                    "type": "string",
                    "description": "Task summary"
                },
                "details": {
                    "type": "string",
                    "description": "Task details"
                },
                "remote_id": {
                    "type": "string",
                    "description": "Remote ID of the task in the external system"
                },
                "remote_alternate_id": {
                    "type": "string",
                    "description": "Alternate Remote ID of the task in the external system"
                },
                "lock_version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "lock version"
                },
                "assignee_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "Assignee user IDs for this task"
                },
                "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time task was completed"
                },
                "due_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time task is due"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time task was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time task was last updated"
                }
            },
            "description": "Task model"
        },
        "Screenshot": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Screenshot ID"
                },
                "full_url": {
                    "type": "string",
                    "description": "Screenshot URL for the full image"
                },
                "thumb_url": {
                    "type": "string",
                    "description": "Screenshot URL for the thumbnail"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "time_slot": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time slot"
                },
                "recorded_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time screenshot was recorded"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "offset_x": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Screen offset X"
                },
                "offset_y": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Screen offset Y"
                },
                "width": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Screenshot width"
                },
                "height": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Screenshot height"
                },
                "screen": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Screen number"
                }
            },
            "description": "Screenshot model"
        },
        "Note": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Note ID"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "time_slot": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time slot"
                },
                "recorded_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time note was recorded in the time slot"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "note": {
                    "type": "string",
                    "description": "Note description"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "task_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Task ID"
                }
            },
            "description": "Note model"
        },
        "postV2OrganizationsOrganizationIdClients": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Client name"
                },
                "emails": {
                    "type": "array",
                    "description": "Default emails when sending an invoice",
                    "items": {
                        "type": "string"
                    }
                },
                "phone": {
                    "type": "string",
                    "description": "Client phone number"
                },
                "address": {
                    "type": "string",
                    "description": "Client address"
                },
                "project_ids": {
                    "type": "array",
                    "description": "Project IDs associated with this client",
                    "items": {
                        "type": "string"
                    }
                },
                "invoice_notes": {
                    "type": "string",
                    "description": "Notes (Shown on invoices)"
                },
                "net_terms": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Amount of days the invoice must be paid once created"
                },
                "budget": {
                    "type": "object",
                    "description": "Budget configuration",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The method for controlling the budget",
                            "enum": [
                                "cost",
                                "hours"
                            ]
                        },
                        "rate": {
                            "type": "string",
                            "description": "When budget type is cost, specifies which rate to use.",
                            "enum": [
                                "bill_rate",
                                "pay_rate"
                            ],
                            "default": "bill_rate"
                        },
                        "cost": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is cost. defines the cost limit."
                        },
                        "hours": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is hours. defines the hours limit."
                        },
                        "start_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The start date for the budget."
                        },
                        "recurrence": {
                            "type": "string",
                            "description": "If given, makes budget reset on a monthly basis",
                            "enum": [
                                "monthly"
                            ]
                        },
                        "include_non_billable": {
                            "type": "boolean",
                            "description": "Whether the budget includes non billable time",
                            "default": true
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "near_limit": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The percentage threshold for notifying when approaching the budget."
                                }
                            }
                        }
                    },
                    "required": [
                        "type"
                    ]
                }
            },
            "required": [
                "name"
            ],
            "description": "Creates a client"
        },
        "Client": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Client ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "name": {
                    "type": "string",
                    "description": "Client Name"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Emails to default send invoices to"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone Number"
                },
                "address": {
                    "type": "string",
                    "description": "Address"
                },
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "List of projects"
                },
                "inherit_invoice_notes": {
                    "type": "bool",
                    "description": "True if the organizations invoice notes will be used"
                },
                "invoice_notes": {
                    "type": "string",
                    "description": "Notes (Shown on invoices)"
                },
                "inherit_net_terms": {
                    "type": "bool",
                    "description": "True if the organizations net terms will be used"
                },
                "net_terms": {
                    "type": "string",
                    "description": "Amount of days the invoice must be paid once created"
                },
                "status": {
                    "type": "string",
                    "description": "Client status"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "budget": {
                    "$ref": "#/definitions/Budget"
                }
            },
            "description": "Client model"
        },
        "Location": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Location ID"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "time_slot": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time slot"
                },
                "recorded_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the location was recorded"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Organization date"
                },
                "latitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude"
                },
                "longitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Longitude"
                },
                "accuracy": {
                    "type": "number",
                    "format": "float",
                    "description": "Accuracy"
                },
                "job_site_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Job Site ID"
                },
                "event": {
                    "type": "string",
                    "description": "Event type (enter, exit, move"
                }
            },
            "description": "Location model"
        },
        "ClientInvoice": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "status": {
                    "type": "string",
                    "description": "Invoice status"
                },
                "author_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The user who created the invoice"
                },
                "number": {
                    "type": "string",
                    "description": "Invoice number"
                },
                "po_number": {
                    "type": "string",
                    "description": "Invoice PO number"
                },
                "notes": {
                    "type": "string",
                    "description": "Invoice notes"
                },
                "currency": {
                    "type": "string",
                    "description": "Invoice currency"
                },
                "grand_total": {
                    "type": "number",
                    "format": "float",
                    "description": "Grand total"
                },
                "paid_amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Amount paid"
                },
                "tax_1": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax 1 percentage to apply to sub total for enabled line items"
                },
                "tax_2": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax 2 percentage to apply to sub total for enabled line items"
                },
                "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount percentage to apply to before taxes for enabled line items"
                },
                "issue_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice issue date"
                },
                "due_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice due date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceLineItem"
                    },
                    "description": "List of invoice line items"
                },
                "viewer_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "View only URL"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Client invoice ID"
                },
                "client_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Client ID this invoice is for"
                }
            },
            "description": "ClientInvoice model"
        },
        "InvoiceLineItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Invoice item id"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "description": {
                    "type": "string",
                    "description": "Item description"
                },
                "quantity": {
                    "type": "number",
                    "format": "float",
                    "description": "Item quantity"
                },
                "unit_price": {
                    "type": "number",
                    "format": "float",
                    "description": "Item price"
                },
                "generated": {
                    "type": "boolean",
                    "description": "True if this line item was generated"
                },
                "generated_data": {
                    "type": "object",
                    "properties": {
                        "duration": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Time worked in seconds for generated data"
                        },
                        "rates": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            },
                            "description": "Hourly rates used for generated data"
                        },
                        "grouping": {
                            "type": "string",
                            "description": "The grouping mode used for the generated data"
                        },
                        "user_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "description": "User ids included in generated data"
                        },
                        "project_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "description": "Project ids included in generated data"
                        },
                        "start_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The start date for the time include in the generated data"
                        },
                        "stop_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The stop date for the time include in the generated data"
                        }
                    }
                },
                "tax_1": {
                    "type": "boolean",
                    "description": "Item tax 1"
                },
                "tax_2": {
                    "type": "boolean",
                    "description": "Item tax 2"
                },
                "discount": {
                    "type": "boolean",
                    "description": "Item discount"
                }
            }
        },
        "TeamInvoice": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "status": {
                    "type": "string",
                    "description": "Invoice status"
                },
                "author_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The user who created the invoice"
                },
                "number": {
                    "type": "string",
                    "description": "Invoice number"
                },
                "po_number": {
                    "type": "string",
                    "description": "Invoice PO number"
                },
                "notes": {
                    "type": "string",
                    "description": "Invoice notes"
                },
                "currency": {
                    "type": "string",
                    "description": "Invoice currency"
                },
                "grand_total": {
                    "type": "number",
                    "format": "float",
                    "description": "Grand total"
                },
                "paid_amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Amount paid"
                },
                "tax_1": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax 1 percentage to apply to sub total for enabled line items"
                },
                "tax_2": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax 2 percentage to apply to sub total for enabled line items"
                },
                "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount percentage to apply to before taxes for enabled line items"
                },
                "issue_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice issue date"
                },
                "due_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice due date"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceLineItem"
                    },
                    "description": "List of invoice line items"
                },
                "viewer_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "View only URL"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Team invoice ID"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID this invoice is for"
                }
            },
            "description": "TeamInvoice model"
        },
        "TimeOffPolicy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time off policy ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "name": {
                    "type": "string",
                    "description": "Time off policy name"
                },
                "auto_add_new_users": {
                    "type": "boolean",
                    "description": "Automatically add new members to this policy"
                },
                "allow_negative_balances": {
                    "type": "boolean",
                    "description": "Member can request time off before having the balance for it."
                },
                "requires_approval": {
                    "type": "boolean",
                    "description": "When false time off requests are automatically approved."
                },
                "balance_rolls_over_annually": {
                    "type": "boolean",
                    "description": "balance rolls over annually"
                },
                "paid": {
                    "type": "boolean",
                    "description": "When true members will be paid for time off taken."
                },
                "policy_type": {
                    "type": "string",
                    "description": "Type of policy"
                },
                "policy_config": {
                    "type": "object",
                    "properties": {
                        "hours_per": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Hours per at amount accrued"
                        },
                        "hours_worked": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Hours worked at amount accrued"
                        },
                        "maximum_to_accrue": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum amount of time off that can be accrued per year. (hours)"
                        },
                        "hours_per_year": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Hours per year"
                        }
                    }
                }
            },
            "description": "TimeOffPolicy model"
        },
        "TimeOffRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time edit log ID"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "time_off_policy_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time off request ID"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "all_day": {
                    "type": "boolean",
                    "description": "Time off request for all day (User's time zone)"
                },
                "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time off request start time"
                },
                "stops_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time off request stop time"
                },
                "submitted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time off request submission time"
                },
                "approved_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time off request approving time"
                },
                "paid": {
                    "type": "boolean",
                    "description": "If the time off request has been paid"
                },
                "amount_used": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time off request amount used"
                },
                "message": {
                    "type": "string",
                    "description": "message"
                },
                "response": {
                    "type": "string",
                    "description": "response"
                },
                "created_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID from creator"
                },
                "approved_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Approving User ID"
                },
                "team_payment_detail_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Team payment detail ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "TimeOffRequest model"
        },
        "AttendanceSchedule": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Attendance schedule ID"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Shift start date"
                },
                "use_time_zone": {
                    "type": "string",
                    "description": "What time zone to use"
                },
                "start_time": {
                    "type": "time",
                    "description": "Shift start time"
                },
                "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Shift duration"
                },
                "minimum_time": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Minimum shift time"
                },
                "repeat_schedule": {
                    "type": "string",
                    "description": "Shift repetition schedule"
                },
                "repeat_until": {
                    "type": "string",
                    "format": "date",
                    "description": "Shift end date"
                },
                "weekdays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Shift repetition week days"
                },
                "excluded_dates": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "date"
                    },
                    "description": "Excluded dates from the repetition schedule"
                }
            },
            "description": "AttendanceSchedule model"
        },
        "Holiday": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Holiday ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "name": {
                    "type": "string",
                    "description": "Holiday name"
                },
                "auto_add_new_users": {
                    "type": "boolean",
                    "description": "Automatically add new members to this holiday"
                },
                "paid": {
                    "type": "boolean",
                    "description": "Whether the holiday will be paid for members."
                },
                "amount_used": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Holiday time to be paid in seconds."
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Holiday date"
                }
            },
            "description": "Holiday model"
        },
        "JobSite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Job Site ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "name": {
                    "type": "string",
                    "description": "Job site name"
                },
                "status": {
                    "type": "string",
                    "description": "Job site status"
                },
                "address": {
                    "type": "string",
                    "description": "Job site address"
                },
                "latitude": {
                    "type": "bigDecimal",
                    "description": "Job site latitude"
                },
                "longitude": {
                    "type": "bigDecimal",
                    "description": "Job site longitude"
                },
                "radius": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Job site radius"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "last_visited_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last visit time"
                }
            },
            "description": "JobSite model"
        },
        "Timesheet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Timesheet ID"
                },
                "paid": {
                    "type": "boolean",
                    "description": "Is the timesheet paid?"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "team_payment_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Team payment ID"
                },
                "client_invoice_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Client invoice ID"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "keyboard": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of time keyboard was active within the time worked"
                },
                "mouse": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of time mouse was active within the time worked"
                },
                "overall": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Percentage of overall time active within the time worked"
                },
                "tracked": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total time tracked (minutes)"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Start date"
                },
                "stop_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Stop date"
                },
                "approved_on": {
                    "type": "string",
                    "format": "date",
                    "description": "Approving date"
                },
                "submitted_on": {
                    "type": "string",
                    "format": "date",
                    "description": "Submission date"
                },
                "approved_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Approving User ID"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Is the timesheet locked"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "Timesheet model"
        },
        "AttendanceShift": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Attendance shift ID"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "organization_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Organization ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Shift date"
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Shift start time"
                },
                "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Shift duration"
                },
                "minimum_time": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Minimum shift time"
                },
                "status": {
                    "type": "string",
                    "description": "Shift status"
                },
                "actual_start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Actual shift start time"
                },
                "actual_stop_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Actual shift stop time"
                },
                "actual_duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Shift actual duration"
                }
            },
            "description": "AttendanceShift model"
        },
        "BudgetHistory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "the budget history ID"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The project ID the budget is for"
                },
                "client_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The client ID the budget is for"
                },
                "budget": {
                    "$ref": "#/definitions/Budget"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The start date of the budget"
                },
                "stop_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The stop date of the budget"
                },
                "spent": {
                    "type": "number",
                    "format": "float",
                    "description": "The amount spent. Either cost or hours depending on the budget type"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                }
            },
            "description": "BudgetHistory model"
        },
        "postV2ProjectsProjectIdTasks": {
            "type": "object",
            "properties": {
                "summary": {
                    "type": "string",
                    "description": "To-do summary"
                },
                "assignee_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Assignee Id"
                }
            },
            "required": [
                "summary",
                "assignee_id"
            ],
            "description": "Create a task"
        },
        "IntegrationProjectLink": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Project ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "remote_id": {
                    "type": "string",
                    "description": "Integration remote ID"
                },
                "remote_alternate_id": {
                    "type": "string",
                    "description": "Integration remote alternate ID"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "disabled_reason": {
                    "type": "string",
                    "description": "Disabled reason"
                },
                "integration_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integration ID"
                },
                "integration_type": {
                    "type": "string",
                    "description": "Integration type"
                },
                "integration_name": {
                    "type": "string",
                    "description": "Integration name"
                },
                "integration_status": {
                    "type": "string",
                    "description": "Integration status"
                },
                "integration_disabled_reason": {
                    "type": "string",
                    "description": "Disabled reason"
                }
            },
            "description": "IntegrationProjectLink model"
        },
        "ProjectMember": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "pay_rate": {
                    "type": "string",
                    "description": "Pay rate"
                },
                "bill_rate": {
                    "type": "string",
                    "description": "Bill rate"
                },
                "currency": {
                    "type": "string",
                    "description": "Currency of pay and bill rates"
                },
                "membership_role": {
                    "type": "string",
                    "description": "Membership role"
                },
                "membership_status": {
                    "type": "string",
                    "description": "Membership status"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "removed_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the member was removed"
                },
                "last_client_activity": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last client activity of user"
                }
            },
            "description": "ProjectMember model"
        },
        "putV2ProjectsProjectIdUpdateMetadata": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string",
                                "description": "The metadata key"
                            },
                            "value": {
                                "type": "string",
                                "description": "The value for the metadata key"
                            }
                        },
                        "required": [
                            "key",
                            "value"
                        ]
                    }
                }
            },
            "required": [
                "metadata"
            ],
            "description": "Updates metadata attached to the project"
        },
        "putV2ProjectsProjectIdUpdateMembers": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "user_id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "User ID"
                            },
                            "role": {
                                "type": "string",
                                "description": "Role for the user.",
                                "enum": [
                                    "viewer",
                                    "user",
                                    "manager",
                                    "remove"
                                ]
                            }
                        },
                        "required": [
                            "user_id",
                            "role"
                        ]
                    }
                }
            },
            "required": [
                "members"
            ],
            "description": "Updates members roles for a project"
        },
        "putV2Projects": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The new name of the project"
                },
                "description": {
                    "type": "string",
                    "description": "The new description of the project"
                },
                "client_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The client ID"
                },
                "billable": {
                    "type": "boolean",
                    "description": "Whether time logged against this project is by default billable"
                },
                "status": {
                    "type": "string",
                    "description": "The project status.",
                    "enum": [
                        "active",
                        "archived"
                    ]
                },
                "budget": {
                    "type": "object",
                    "description": "Budget configuration",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The method for controlling the budget",
                            "enum": [
                                "cost",
                                "hours"
                            ]
                        },
                        "rate": {
                            "type": "string",
                            "description": "When budget type is cost, specifies which rate to use.",
                            "enum": [
                                "bill_rate",
                                "pay_rate"
                            ],
                            "default": "bill_rate"
                        },
                        "cost": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is cost. defines the cost limit."
                        },
                        "hours": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is hours. defines the hours limit."
                        },
                        "start_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The start date for the budget."
                        },
                        "recurrence": {
                            "type": "string",
                            "description": "If given, makes budget reset on a monthly basis",
                            "enum": [
                                "monthly"
                            ]
                        },
                        "include_non_billable": {
                            "type": "boolean",
                            "description": "Whether the budget includes non billable time",
                            "default": true
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "near_limit": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The percentage threshold for notifying when approaching the budget."
                                }
                            }
                        }
                    },
                    "required": [
                        "type"
                    ]
                }
            },
            "description": "Update a project"
        },
        "putV2Tasks": {
            "type": "object",
            "properties": {
                "lock_version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Lock version"
                },
                "summary": {
                    "type": "string",
                    "description": "To-do summary"
                },
                "assignee_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Id"
                },
                "status": {
                    "type": "string",
                    "description": "The task status.",
                    "enum": [
                        "active",
                        "completed"
                    ]
                }
            },
            "required": [
                "lock_version"
            ],
            "description": "Update a task"
        },
        "IntegrationUserLink": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the record was last updated"
                },
                "remote_id": {
                    "type": "string",
                    "description": "Integration remote ID"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "connected": {
                    "type": "boolean",
                    "description": "True if the user has authenticated with the remote system"
                },
                "disabled_reason": {
                    "type": "string",
                    "description": "Disabled reason"
                },
                "integration_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integration ID"
                },
                "integration_type": {
                    "type": "string",
                    "description": "Integration type"
                },
                "integration_name": {
                    "type": "string",
                    "description": "Integration name"
                },
                "integration_status": {
                    "type": "string",
                    "description": "Integration status"
                },
                "integration_disabled_reason": {
                    "type": "string",
                    "description": "Disabled reason"
                }
            },
            "description": "IntegrationUserLink model"
        },
        "putV2Clients": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The new name of the client"
                },
                "emails": {
                    "type": "array",
                    "description": "The new emails for the client",
                    "items": {
                        "type": "string"
                    }
                },
                "phone": {
                    "type": "string",
                    "description": "Client phone number"
                },
                "address": {
                    "type": "string",
                    "description": "Client address"
                },
                "project_ids": {
                    "type": "array",
                    "description": "Client projects",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "invoice_notes": {
                    "type": "string",
                    "description": "Notes (Shown on invoices)"
                },
                "net_terms": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Amount of days the invoice must be paid once created"
                },
                "budget": {
                    "type": "object",
                    "description": "Budget configuration",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The method for controlling the budget",
                            "enum": [
                                "cost",
                                "hours"
                            ]
                        },
                        "rate": {
                            "type": "string",
                            "description": "When budget type is cost, specifies which rate to use.",
                            "enum": [
                                "bill_rate",
                                "pay_rate"
                            ],
                            "default": "bill_rate"
                        },
                        "cost": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is cost. defines the cost limit."
                        },
                        "hours": {
                            "type": "number",
                            "format": "float",
                            "description": "When budget type is hours. defines the hours limit."
                        },
                        "start_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The start date for the budget."
                        },
                        "recurrence": {
                            "type": "string",
                            "description": "If given, makes budget reset on a monthly basis",
                            "enum": [
                                "monthly"
                            ]
                        },
                        "include_non_billable": {
                            "type": "boolean",
                            "description": "Whether the budget includes non billable time",
                            "default": true
                        },
                        "alerts": {
                            "type": "object",
                            "properties": {
                                "near_limit": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The percentage threshold for notifying when approaching the budget."
                                }
                            }
                        }
                    },
                    "required": [
                        "type"
                    ]
                }
            },
            "description": "Update a client"
        }
    }
}